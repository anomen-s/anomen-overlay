--- a/symbols/cz	2023-10-05 21:26:07.000000000 +0200
+++ b/symbols/cz	2023-12-23 12:12:28.737828512 +0100
@@ -494,27 +494,76 @@
     // for touch-typing programmers who need to write Czech occasionally.
     // https://github.com/michalkahle/czech-coder-xkb
 
-    include "us"
+    // This layout based on czech programmers' keyboard layout from windows
+    // https://github.com/anomen-s/czech-programmer-keyboard-layout-xkb
+
+    include "latin"
+
     name[Group1]= "Czech (coder)";
 
-    key <TLDE>	{[     grave,  asciitilde,     semicolon, dead_abovering ]};
-    key <AE02>	{[         2,          at,        ecaron,     Ecaron ]};
-    key <AE03>	{[         3,  numbersign,        scaron,     Scaron ]};
-    key <AE04>	{[         4,      dollar,        ccaron,     Ccaron ]};
-    key <AE05>	{[         5,     percent,        rcaron,     Rcaron ]};
-    key <AE06>	{[         6, asciicircum,        zcaron,     Zcaron ]};
-    key <AE07>	{[         7,   ampersand,        yacute,     Yacute ]};
-    key <AE08>	{[         8,    asterisk,        aacute,     Aacute ]};
-    key <AE09>	{[         9,   parenleft,        iacute,     Iacute ]};
-    key <AE10>	{[         0,  parenright,        eacute,     Eacute ]};
+    key <TLDE>  { [ grave,   asciitilde,      twosuperior, dead_abovering ]};
+
+    key <AE01>	{[         1,     exclam,    plusminus,       dead_tilde ]};
+    key <AE02>	{[         2,         at,       ecaron,       dead_caron ]}; // TODO: replace caron
+    key <AE03>	{[         3, numbersign,       scaron,  dead_circumflex ]};
+    key <AE04>	{[         4,     dollar,       ccaron,       dead_breve ]};
+    key <AE05>	{[         5,    percent,       rcaron,   dead_abovering ]};
+    key <AE06>	{[         6, asciicircum,      zcaron,      dead_ogonek ]};
+    key <AE07>	{[         7,  ampersand,       yacute,       dead_grave ]};
+    key <AE08>	{[         8,   asterisk,       aacute,    dead_abovedot ]};
+    key <AE09>	{[         9,  parenleft,       iacute,       dead_acute ]}; // TODO: replace acute
+    key <AE10>	{[         0, parenright,       eacute, dead_doubleacute ]};
+    key <AE11>	{[     minus, underscore,    identical,            U2030 ]}; // U+2030 permille
     key <AE12>	{[     equal,        plus,    dead_acute, dead_caron ]};
 
-    key <AD03>	{[         e,           E,             e,   EuroSign ]};
-    key <AD11>	{[ bracketleft, braceleft,        uacute,     Uacute ]};
 
-    key <AC10>	{[ semicolon,      colon,          uring,      Uring ]};
-    key <AC11>	{[ apostrophe,  quotedbl,        section,   quotedbl ]};
-    key <BKSL>	{[ backslash,        bar, dead_diaeresis, apostrophe ]};
+    key <AD01>  { [         q,          Q, leftdoublequotemark, doublelowquotemark ]    };
+    key <AD02>  { [         w,          W,        U2126,     Nosymbol ] }; // U+2126 OHM SIGN
+    key <AD03>  { [         e,          E,     EuroSign,        U01DD ] }; // U+01DD LATIN SMALL LETTER TURNED E
+    //key <AD04>    { [         r,          R,    paragraph,   registered ] }; // = latin(basic)
+    //key <AD05>    { [         t,          T,       tslash,       Tslash ] }; // = latin(basic)
+    //key <AD06>    { [         y,          Y,    leftarrow,          yen ] }; // = latin(basic)
+    //key <AD07>    { [         u,          U,    downarrow,      uparrow ] }; // = latin(basic)
+    //key <AD08>    { [         i,          I,   rightarrow,     idotless ] }; // = latin(basic)
+    key <AD09>  { [         o,          O,       oslash,       Oslash ] };
+    //key <AD10>    { [         p,          P,        thorn,        Thorn ] }; // = latin(basic)
+
+    key <AD11>  { [bracketleft,  braceleft,      uacute,        U2044 ] }; // U+2044 FRACTION SLASH
+    key <AD12>  { [bracketright, braceright,guillemotright,guillemotleft ]  };
+
+    key <AC01>  { [         a,          A,           ae,           AE ] };
+    key <AC02>  { [         s,          S,       ssharp,     sterling ] }; // CHECK
+    key <AC03>  { [         d,          D,      dstroke,      Dstroke ] };
+    key <AC04>  { [         f,          F,     NoSymbol,  ordfeminine ] };
+    //key <AC05>    { [         g,          G,          eng,          ENG ] }; // = latin(basic)
+    //key <AC06>    { [         h,          H,      hstroke,      Hstroke ] }; // = latin(basic)
+    key <AC07>  { [         j,          J,     NoSymbol,     NoSymbol ] };
+    key <AC08>  { [         k,          K,          kra,     NoSymbol ] };
+    //key <AC09>    { [         l,          L,      lstroke,      Lstroke ] };  // = latin(basic)
+
+    key <AC10>  { [ semicolon,    colon,          uring, rightdoublequotemark ] }; // CHECK
+    key <AC11>  { [apostrophe, quotedbl,        section,   exclamdown ] };  // CHECK
+    key <AC12>  { [  EuroSign, dead_diaeresis, NoSymbol,     NoSymbol ] };  // not present on most keyboards, same as BKSL ?
+
+    key <BKSL>  { [ backslash,      bar, dead_diaeresis,    semicolon ] };
+
+    key <LSGT>  { [ backslash,        bar,        slash,     NoSymbol ] };
+    key <AB01>  { [         z,          Z,       degree,     infinity ] }; // CHECK
+    key <AB02>  { [         x,          X,   exclamdown,     NoSymbol ] }; // CHECK
+    //key <AB03>    { [         c,          C,         cent,    copyright ] }; // = latin(basic)
+    key <AB04>  { [         v,          V,     NoSymbol,     NoSymbol ] };
+    key <AB05>  { [         b,          B,   Greek_beta,     NoSymbol ] };
+    key <AB06>  { [         n,          N,   numerosign,     NoSymbol ] };
+    //key <AB07>    { [         m,          M,           mu,    masculine ] };  // = latin(basic)
+
+    key <AB08>  { [     comma,       less, questiondown,     multiply ] }; // CHECK
+    key <AB09>  { [    period,    greater,     ellipsis,     division ] };
+    key <AB10>  { [     slash,   question,       endash,       emdash ] }; //dead_belowdot, dead_abovedot
+
+    key <SPCE>  { [     space,      space, nobreakspace, nobreakspace ] };
+
+    key <KPDL>  { type[Group1]="FOUR_LEVEL_KEYPAD",
+                  [ KP_Delete,      comma,    KP_Delete,   KP_Decimal ] };
 
     include "level3(ralt_switch)"
 };
