--- a/symbols/cz	2022-06-02 00:44:25.000000000 +0200
+++ a/symbols/cz	2022-07-13 14:25:15.345435967 +0200
@@ -339,69 +339,78 @@
 };
 
 xkb_symbols "prog" {
-    // cz-prog 1.0 2019-05-15 by Viktor Grešák <vgresak@gmail.com> and Tomáš Hudec <Tommy.Hudec@gmail.com>
-    //
-    // Programmer keyboard. Based on the US layout with accented Czech letters and dead keys.
-    // Using AltGr plus a key from the first row (except TLDE and AE12) gives the original level 2 US symbol.
-    // Using AltGr+Shift on an accented letter on this first row gives its uppercase variant.
-    // Using AltGr or AltGr+Shift on other letters which have an accent in Czech give the  corresponding
-    // accented letters; that is, [d, D], [t, T], [n, N], [o, O] give [ď, Ď], [ť, Ť], [ň, Ň], [ó, Ó].
-    // Two other Czech letters (ú, ů) are accessed via AltGr together with their usual key.
+ 
+     // This layout based on czech programmers' keyboard layout from windows 
+     // (c) 2017 by anomen
+     // $Id: cz 16 2017-01-14 10:48:28Z ludek $
+
+    include "latin"
 
     name[Group1]="Czech (programming)";
 
-    key <TLDE> {[ grave,	asciitilde ]};
-    key <AE01> {[ plus,		1,	exclam,		none   ]};
-    key <AE02> {[ ecaron,	2,	at,		Ecaron ]};
-    key <AE03> {[ scaron,	3,	numbersign,	Scaron ]};
-    key <AE04> {[ ccaron,	4,	dollar,		Ccaron ]};
-    key <AE05> {[ rcaron,	5,	percent,	Rcaron ]};
-    key <AE06> {[ zcaron,	6,	asciicircum,	Zcaron ]};
-    key <AE07> {[ yacute,	7,	ampersand,	Yacute ]};
-    key <AE08> {[ aacute,	8,	asterisk,	Aacute ]};
-    key <AE09> {[ iacute,	9,	parenleft,	Iacute ]};
-    key <AE10> {[ eacute,	0,	parenright,	Eacute ]};
-    key <AE11> {[ equal,	minus,	underscore,	U2212  ]};
-    key <AE12> {[ dead_acute,	dead_caron, plusminus,	notequal ]};
-
-    key <AD01> {[ q,	Q ]};
-    key <AD02> {[ w,	W ]};
-    key <AD03> {[ e,	E ]};
-    key <AD04> {[ r,	R ]};
-    key <AD05> {[ t,	T,			tcaron,	Tcaron ]};
-    key <AD06> {[ y,	Y ]};
-    key <AD07> {[ u,	U ]};
-    key <AD08> {[ i,	I ]};
-    key <AD09> {[ o,	O,			oacute,	Oacute ]};
-    key <AD10> {[ p,	P ]};
-    key <AD11> {[ bracketleft,	braceleft,	uacute,	Uacute ]};
-    key <AD12> {[ bracketright,	braceright ]};
-
-    key <AC01> {[ a,	A ]};
-    key <AC02> {[ s,	S ]};
-    key <AC03> {[ d,	D,			dcaron,	Dcaron ]};
-    key <AC04> {[ f,	F ]};
-    key <AC05> {[ g,	G ]};
-    key <AC06> {[ h,	H ]};
-    key <AC07> {[ j,	J ]};
-    key <AC08> {[ k,	K ]};
-    key <AC09> {[ l,	L ]};
-    key <AC10> {[ semicolon,	colon,		uring,	Uring ]};
-    key <AC11> {[ apostrophe,	quotedbl,	section ]};
-    key <BKSL> {[ backslash,	bar,		dead_diaeresis ]};
-
-    key <AB01> {[ z,	Z ]};
-    key <AB02> {[ x,	X ]};
-    key <AB03> {[ c,	C ]};
-    key <AB04> {[ v,	V ]};
-    key <AB05> {[ b,	B ]};
-    key <AB06> {[ n,	N,			ncaron,	Ncaron ]};
-    key <AB07> {[ m,	M ]};
-    key <AB08> {[ comma,	less,		multiply ]};
-    key <AB09> {[ period,	greater,	division ]};
-    key <AB10> {[ slash,	question,	dead_abovedot ]};
+    key <TLDE>  { [ grave,   asciitilde,      twosuperior, dead_abovering ]};
+
+    key <AE01>  { [         1,     exclam,    plusminus,       dead_tilde ]};
+    key <AE02>  { [         2,         at,       ecaron,       dead_caron ]}; // TODO: replace caron
+    key <AE03>  { [         3, numbersign,       scaron,  dead_circumflex ]};
+    key <AE04>  { [         4,     dollar,       ccaron,       dead_breve ]};
+    key <AE05>  { [         5,    percent,       rcaron,   dead_abovering ]};
+    key <AE06>  { [         6, asciicircum,      zcaron,      dead_ogonek ]     };
+    key <AE07>  { [         7,  ampersand,       yacute,       dead_grave ] };
+    key <AE08>  { [         8,   asterisk,       aacute,    dead_abovedot ] };
+    key <AE09>  { [         9,  parenleft,       iacute,       dead_acute ] }; // TODO: replace acute
+    key <AE10>  { [         0, parenright,       eacute, dead_doubleacute ] };
+    key <AE11>  { [     minus, underscore,    identical,            U2030 ] }; // U+2030 is permille
+    key <AE12>  { [     equal,       plus,   dead_acute,       dead_caron ] };
+
+
+    key <AD01>  { [         q,          Q, leftdoublequotemark, doublelowquotemark ]    };
+    key <AD02>  { [         w,          W,        U2126,     Nosymbol ] }; // U+2126 is OHM SIGN
+    key <AD03>  { [         e,          E,     EuroSign,        U01DD ] }; // U+01DD is LATIN SMALL LETTER TURNED E
+    //key <AD04>    { [         r,          R,    paragraph,   registered ] }; // = latin(basic)
+    //key <AD05>    { [         t,          T,       tslash,       Tslash ] }; // = latin(basic)
+    //key <AD06>    { [         y,          Y,    leftarrow,          yen ] }; // = latin(basic)
+    //key <AD07>    { [         u,          U,    downarrow,      uparrow ] }; // = latin(basic)
+    //key <AD08>    { [         i,          I,   rightarrow,     idotless ] }; // = latin(basic)
+    key <AD09>  { [         o,          O,       oslash,       Oslash ] };
+    //key <AD10>    { [         p,          P,        thorn,        Thorn ] }; // = latin(basic)
+
+    key <AD11>  { [bracketleft,  braceleft,      uacute,        U2044 ] }; // U+2044 is FRACTION SLASH
+    key <AD12>  { [bracketright, braceright,guillemotright,guillemotleft ]  };
+
+    key <AC01>  { [         a,          A,           ae,           AE ] };
+    key <AC02>  { [         s,          S,       ssharp,     sterling ] }; // CHECK
+    key <AC03>  { [         d,          D,      dstroke,      Dstroke ] };
+    key <AC04>  { [         f,          F,     NoSymbol,  ordfeminine ] };
+    //key <AC05>    { [         g,          G,          eng,          ENG ] }; // = latin(basic)
+    //key <AC06>    { [         h,          H,      hstroke,      Hstroke ] }; // = latin(basic)
+    key <AC07>  { [         j,          J,     NoSymbol,     NoSymbol ] };
+    key <AC08>  { [         k,          K,          kra,     NoSymbol ] };
+    //key <AC09>    { [         l,          L,      lstroke,      Lstroke ] };  // = latin(basic)
+
+    key <AC10>  { [ semicolon,    colon,          uring, rightdoublequotemark ] }; // CHECK
+    key <AC11>  { [apostrophe, quotedbl,        section,   exclamdown ] };  // CHECK
+    key <AC12>  { [  EuroSign, dead_diaeresis, NoSymbol,     NoSymbol ] };  // not present on most keyboards, same as BKSL ?
+
+    key <BKSL>  { [ backslash,      bar, dead_diaeresis,    semicolon ] };
+
+    key <LSGT>  { [ backslash,        bar,        slash,     NoSymbol ] };
+    key <AB01>  { [         z,          Z,       degree,     infinity ] }; // CHECK
+    key <AB02>  { [         x,          X,   exclamdown,     NoSymbol ] }; // CHECK
+    //key <AB03>    { [         c,          C,         cent,    copyright ] }; // = latin(basic)
+    key <AB04>  { [         v,          V,     NoSymbol,     NoSymbol ] };
+    key <AB05>  { [         b,          B,   Greek_beta,     NoSymbol ] };
+    key <AB06>  { [         n,          N,   numerosign,     NoSymbol ] };
+    //key <AB07>    { [         m,          M,           mu,    masculine ] };  // = latin(basic)
+
+    key <AB08>  { [     comma,       less, questiondown,     multiply ] }; // CHECK
+    key <AB09>  { [    period,    greater,     ellipsis,     division ] };
+    key <AB10>  { [     slash,   question,       endash,       emdash ] }; //dead_belowdot, dead_abovedot
+
+    key <SPCE>  { [     space,      space, nobreakspace, nobreakspace ] };
 
-    key <COMP> {[ Menu,	Multi_key ]};
+    key <KPDL>  { type[Group1]="FOUR_LEVEL_KEYPAD",
+                  [ KP_Delete,      comma,    KP_Delete,   KP_Decimal ] };
 
     include "level3(ralt_switch)"
 };
